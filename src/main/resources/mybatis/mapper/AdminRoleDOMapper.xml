<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zang.mbg.mapper.AdminRoleDOMapper">
  <resultMap id="BaseResultMap" type="top.zang.mbg.model.AdminRoleDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="admin_menu_ids" jdbcType="VARCHAR" property="admin_menu_ids" />
    <result column="admin_resource_ids" jdbcType="VARCHAR" property="admin_resource_ids" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, status, admin_menu_ids, admin_resource_ids, remark
  </sql>
  <select id="selectByExample" parameterType="top.zang.mbg.model.AdminRoleDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admin_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.zang.mbg.model.AdminRoleDOExample">
    delete from admin_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.zang.mbg.model.AdminRoleDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into admin_role (name, status, admin_menu_ids, 
      admin_resource_ids, remark)
    values (#{name,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{admin_menu_ids,jdbcType=VARCHAR}, 
      #{admin_resource_ids,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.zang.mbg.model.AdminRoleDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into admin_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="admin_menu_ids != null">
        admin_menu_ids,
      </if>
      <if test="admin_resource_ids != null">
        admin_resource_ids,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="admin_menu_ids != null">
        #{admin_menu_ids,jdbcType=VARCHAR},
      </if>
      <if test="admin_resource_ids != null">
        #{admin_resource_ids,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.zang.mbg.model.AdminRoleDOExample" resultType="java.lang.Long">
    select count(*) from admin_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.admin_menu_ids != null">
        admin_menu_ids = #{record.admin_menu_ids,jdbcType=VARCHAR},
      </if>
      <if test="record.admin_resource_ids != null">
        admin_resource_ids = #{record.admin_resource_ids,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin_role
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      admin_menu_ids = #{record.admin_menu_ids,jdbcType=VARCHAR},
      admin_resource_ids = #{record.admin_resource_ids,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.zang.mbg.model.AdminRoleDO">
    update admin_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="admin_menu_ids != null">
        admin_menu_ids = #{admin_menu_ids,jdbcType=VARCHAR},
      </if>
      <if test="admin_resource_ids != null">
        admin_resource_ids = #{admin_resource_ids,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.zang.mbg.model.AdminRoleDO">
    update admin_role
    set name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      admin_menu_ids = #{admin_menu_ids,jdbcType=VARCHAR},
      admin_resource_ids = #{admin_resource_ids,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into admin_role (`name`, `status`, `admin_menu_ids`, `admin_resource_ids`, `remark`)
    values
    <foreach collection="list" item="item" separator=",">
       (#{item.name,jdbcType=VARCHAR}, #{item.status,jdbcType=TINYINT}, #{item.admin_menu_ids,jdbcType=VARCHAR}, #{item.admin_resource_ids,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <update id="batchUpdate" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      UPDATE admin_role
      <set>
        <if test="item.name != null">
          `name` = #{item.name},
        </if>
        <if test="item.status != null">
          `status` = #{item.status},
        </if>
        <if test="item.admin_menu_ids != null">
          `admin_menu_ids` = #{item.admin_menu_ids},
        </if>
        <if test="item.admin_resource_ids != null">
          `admin_resource_ids` = #{item.admin_resource_ids},
        </if>
        <if test="item.remark != null">
          `remark` = #{item.remark},
        </if>
      </set>
      where `id` = #{item.id}
    </foreach>
  </update>
</mapper>