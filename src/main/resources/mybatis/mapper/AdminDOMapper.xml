<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zang.mbg.mapper.AdminDOMapper">
  <resultMap id="BaseResultMap" type="top.zang.mbg.model.AdminDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="login_name" jdbcType="VARCHAR" property="login_name" />
    <result column="login_pwd" jdbcType="VARCHAR" property="login_pwd" />
    <result column="admin_role_ids" jdbcType="VARCHAR" property="admin_role_ids" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="login_token" jdbcType="VARCHAR" property="login_token" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mobile, email, login_name, login_pwd, admin_role_ids, name, avatar, sex, address, 
    birthday, login_token, status, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="top.zang.mbg.model.AdminDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admin
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.zang.mbg.model.AdminDOExample">
    delete from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.zang.mbg.model.AdminDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into admin (mobile, email, login_name, 
      login_pwd, admin_role_ids, name, 
      avatar, sex, address, 
      birthday, login_token, status, 
      create_time, update_time)
    values (#{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{login_name,jdbcType=VARCHAR}, 
      #{login_pwd,jdbcType=VARCHAR}, #{admin_role_ids,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{address,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{login_token,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="top.zang.mbg.model.AdminDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="login_name != null">
        login_name,
      </if>
      <if test="login_pwd != null">
        login_pwd,
      </if>
      <if test="admin_role_ids != null">
        admin_role_ids,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="login_token != null">
        login_token,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="login_name != null">
        #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="login_pwd != null">
        #{login_pwd,jdbcType=VARCHAR},
      </if>
      <if test="admin_role_ids != null">
        #{admin_role_ids,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="login_token != null">
        #{login_token,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.zang.mbg.model.AdminDOExample" resultType="java.lang.Long">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.login_name != null">
        login_name = #{record.login_name,jdbcType=VARCHAR},
      </if>
      <if test="record.login_pwd != null">
        login_pwd = #{record.login_pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.admin_role_ids != null">
        admin_role_ids = #{record.admin_role_ids,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.login_token != null">
        login_token = #{record.login_token,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin
    set id = #{record.id,jdbcType=BIGINT},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      login_name = #{record.login_name,jdbcType=VARCHAR},
      login_pwd = #{record.login_pwd,jdbcType=VARCHAR},
      admin_role_ids = #{record.admin_role_ids,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      address = #{record.address,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      login_token = #{record.login_token,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.zang.mbg.model.AdminDO">
    update admin
    <set>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="login_name != null">
        login_name = #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="login_pwd != null">
        login_pwd = #{login_pwd,jdbcType=VARCHAR},
      </if>
      <if test="admin_role_ids != null">
        admin_role_ids = #{admin_role_ids,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="login_token != null">
        login_token = #{login_token,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.zang.mbg.model.AdminDO">
    update admin
    set mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      login_name = #{login_name,jdbcType=VARCHAR},
      login_pwd = #{login_pwd,jdbcType=VARCHAR},
      admin_role_ids = #{admin_role_ids,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      address = #{address,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      login_token = #{login_token,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into admin (`mobile`, `email`, `login_name`, `login_pwd`, `admin_role_ids`, `name`, `avatar`, `sex`, `address`, `birthday`, `login_token`, `status`, `create_time`, `update_time`)
    values
    <foreach collection="list" item="item" separator=",">
       (#{item.mobile,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.login_name,jdbcType=VARCHAR}, #{item.login_pwd,jdbcType=VARCHAR}, #{item.admin_role_ids,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.avatar,jdbcType=VARCHAR}, #{item.sex,jdbcType=TINYINT}, #{item.address,jdbcType=VARCHAR}, #{item.birthday,jdbcType=VARCHAR}, #{item.login_token,jdbcType=VARCHAR}, #{item.status,jdbcType=TINYINT}, #{item.create_time,jdbcType=TIMESTAMP}, #{item.update_time,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <update id="batchUpdate" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      UPDATE admin
      <set>
        <if test="item.mobile != null">
          `mobile` = #{item.mobile},
        </if>
        <if test="item.email != null">
          `email` = #{item.email},
        </if>
        <if test="item.login_name != null">
          `login_name` = #{item.login_name},
        </if>
        <if test="item.login_pwd != null">
          `login_pwd` = #{item.login_pwd},
        </if>
        <if test="item.admin_role_ids != null">
          `admin_role_ids` = #{item.admin_role_ids},
        </if>
        <if test="item.name != null">
          `name` = #{item.name},
        </if>
        <if test="item.avatar != null">
          `avatar` = #{item.avatar},
        </if>
        <if test="item.sex != null">
          `sex` = #{item.sex},
        </if>
        <if test="item.address != null">
          `address` = #{item.address},
        </if>
        <if test="item.birthday != null">
          `birthday` = #{item.birthday},
        </if>
        <if test="item.login_token != null">
          `login_token` = #{item.login_token},
        </if>
        <if test="item.status != null">
          `status` = #{item.status},
        </if>
        <if test="item.create_time != null">
          `create_time` = #{item.create_time},
        </if>
        <if test="item.update_time != null">
          `update_time` = #{item.update_time},
        </if>
      </set>
      where `id` = #{item.id}
    </foreach>
  </update>
</mapper>